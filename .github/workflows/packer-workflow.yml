name: Packer Application Check
on:
  pull_request:
    branches: [main]
env:
  AMI_USER: ${{ secrets.AMI_USER }}
  LATEST_AMI_ID : ""

jobs:
  packer-checks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Clean install
        run: npm ci

      - name: Zip Files
        run: zip -r webapp.zip .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Packer Init
        run: packer init .

      - name: Packer Validate
        run: packer validate .

      - name: Packer Build
        run: LATEST_AMI_ID="ami-0c4b782e4bc4eb675"

      - name: Create Launch Template Version
        run: ID=$(aws ec2 describe-images --owners self --query 'reverse(sort_by(Images,&CreationDate))[0].ImageId' --output text)
          aws ec2 create-launch-template-version --launch-template-id ${{secrets.LAUNCH_TEMPLATE_NAME}} --source-version '$Latest' --launch-template-data '{"ImageId":$ID}'

#      - name: Update Auto Scaling Group
#        run: aws autoscaling update-auto-scaling-group --auto-scaling-group-name ${{secrets.AUTO_SCALING_GROUP_NAME}} --launch-template LaunchTemplateName=${{secrets.LT_NAME}},Version='$Latest'
#
#      - name: Start Instance Refresh
#        run: aws autoscaling start-instance-refresh --auto-scaling-group-name ${{secrets.AUTO_SCALING_GROUP_NAME}}
